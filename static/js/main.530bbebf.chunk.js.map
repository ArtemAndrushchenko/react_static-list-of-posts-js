{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","name","email","className","href","CommentInfo","comment","body","CommentList","comments","map","id","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"o18IAEaA,EAAW,SAAC,GAAD,QAAGC,KACzBC,EADsB,EACtBA,KACAC,EAFsB,EAEtBA,MAFsB,OAItB,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCNQI,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1BL,EAGEK,EAHFL,KACAC,EAEEI,EAFFJ,MACAK,EACED,EADFC,KAGF,OACE,sBAAKJ,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCF,IAEtC,OAED,mBACEE,UAAU,qBACVC,KAAI,iBAAYF,GAFlB,SAIGA,OAIL,qBAAKC,UAAU,oBAAf,SACGI,QCrBIC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAJ,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQK,WCFrCC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAIED,EAJFC,MACAP,EAGEM,EAHFN,KACAP,EAEEa,EAFFb,KACAS,EACEI,EADFJ,SAGF,OACE,mCACE,sBAAKN,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IAEjC,8BACG,eAED,cAAC,EAAD,CAAUd,KAAMA,UAIpB,mBAAGG,UAAU,iBAAb,SACGI,IAGkB,IAApBE,EAASM,OACR,qCACE,uBACA,mBAAG,UAAQ,oBAAX,gCAGF,cAAC,EAAD,CAAaN,SAAUA,WCjCpBO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKd,UAAU,WAAf,SACGc,EAAMP,KAAI,SAAAG,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKF,UCa/B,IAAMM,EAAQC,EAAgBR,KAAI,SAAAG,GAAI,kCACxCA,GADwC,IAE3Cb,MARmBmB,EAQDN,EAAKM,OAPhBC,EAAgBC,MACrB,SAAArB,GAAI,OAAIA,EAAKW,KAAOQ,MACjB,MAMLV,UAf2Ba,EAeGT,EAAKF,GAd5BY,EAAmBC,QACxB,SAAAlB,GAAO,OAAIA,EAAQgB,SAAWA,MAC3B,QAHP,IAA6BA,EAMRH,KAYRM,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUc,MAAOA,QCvBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.530bbebf.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user: {\n  name,\n  email,\n} }) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","\nexport const CommentInfo = ({ comment }) => {\n  const {\n    name,\n    email,\n    body,\n  } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    title,\n    body,\n    user,\n    comments,\n  } = post;\n\n  return (\n    <>\n      <div className=\"PostInfo\">\n        <div className=\"PostInfo__header\">\n          <h3 className=\"PostInfo__title\">{title}</h3>\n\n          <p>\n            {' Posted by  '}\n\n            <UserInfo user={user} />\n          </p>\n        </div>\n\n        <p className=\"PostInfo__body\">\n          {body}\n        </p>\n\n        {comments.length === 0 ? (\n          <>\n            <hr />\n            <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n          </>\n        ) : (\n          <CommentList comments={comments} />\n        )}\n      </div>\n    </>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getCommentsByPostId(postId) {\n  return commentsFromServer.filter(\n    comment => comment.postId === postId,\n  ) || null;\n}\n\nfunction getUserById(userId) {\n  return usersFromServer.find(\n    user => user.id === userId,\n  ) || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsByPostId(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}